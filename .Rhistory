statA<-read.csv("state_a.csv", sep="|", dec = ";")
statA
#1
statA<-read.csv("state_a.csv", sep="|", dec = "|")
statA
#1
statA<-read.csv("state_a.csv", sep="|", dec = ",")
statA
#1
statA<-read.csv("state_a.csv", header = TRUE, sep = ",", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
statA
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB, statC, by = "etat", all = TRUE)
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB, statC, by = "etat", all = TRUE)
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB, statC, by = "etat")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB, by = "etat")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statC, by = "region")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, sep=";")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, sep=";")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA)
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statC,by = "region")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB,by = "etat")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB,by = "etat")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB,by = "etat")
#1
statA<-read.csv("state_a.csv")
statB<-read.csv("state_b.csv")
statC<-read.csv("state_c.csv")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB,by = etat)
#1
statA<-read.csv("state_a.csv", sep=";")
statB<-read.csv("state_b.csv", sep = ",")
statC<-read.csv("state_c.csv", sep = " ")
#2
#Fusion des 3 data-frames en 1 seul avec les col communes
library(dplyr)
fusDatfr <- full_join(statA, statB,by = "etat")
fusDatfr <- full_join(fusDatfr, statC, by = "region")
fusDatfr
fusDatfr <- full_join(statA, statB,by = "etat")
fusDatfr <- full_join(fusDatfr, statC, by = "region")
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
install.packages("readxl")
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1<-fichier1[]
fichier1
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fichier1
fichier2
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhhat1, yhat3, rhamnos)
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhhat1, yhat3, rhamnos)
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhat1, yhat3, rhamnos)
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhat1, yhat3, Rhamnos, )
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhat1, yhat3, Rhamnos, Arabinos )
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)
select(yhat1, yhat3, Rhamnos, Arabinos )
fichier1
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)
select(yhat1, yhat3, Rhamnos, Arabinos )
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
fichier1
fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhat1, yhat3, Rhamnos, Arabinos )
library(readxl)
fichier1<-read_excel("fus1.xls")
fichier2<-read_excel("fus2.xls")
#fichier1
#fichier2
fusionner<-bind_rows(fichier1, fichier2)%>%
select(yhat1, yhat3, Rhamnos, Arabinos )
fusionner
# Module -- TP 2 : Intervalles de Fluctuation pour variance et probabilité
# Ibrahima BODIAN
getwd()
# Module -- TP 2 : Intervalles de Fluctuation pour variance et probabilité
# Ibrahima BODIAN
getwd()
setwd("/home/UCA/ibbodian")
#1 stockage de données :
echantillon1<-c(0.68938846, 1.72612559, 6.03555147, 0.40361563, 1.35423643, 0.43755565, 1.16310362, 0.08925679, 0.88439706
, 1.83145658, 0.86651504, 4.37638700, 0.96675782, 1.55535209, 1.24875387, 1.93813582, 0.70318682, 0.44569490
, 2.31551945, 0.26092488)
echantillon2<-c(1.21294856, 1.07366089, 0.52284983, 0.94403055, 0.53059638, 0.66431455, 0.11918900, 0.01014788, 0.99207551
, 1.49537888, 1.11491060, 4.23910681, 1.32327633, 2.15815562, 1.84504558, 4.38339477, 1.28975758, 0.13556966
, 4.05910357, 2.65021707)
echantillon3<-c(4.93362298, 1.04238280, 2.13726114, 1.45153761, 2.55945516, 2.19716638, 0.39689401, 0.48543652, 2.13686086
, 0.41087859, 1.09691746, 0.03072342, 10.50884621, 1.59623044, 2.32065654, 0.20772100, 0.18751629, 3.17820394
, 0.89839516, 3.44749498)
echantillon4<-c(0.01191219, 3.40085094, 1.63522822, 4.44908381, 3.50944444, 8.55186688, 0.54493362, 1.71543581, 0.70409088
, 0.38132654, 1.59910721, 1.85459464, 0.85092553, 0.46799522, 6.10405260, 1.24549747, 0.86186191, 2.33415904
, 1.45818600, 2.59349553)
echantillon5<-c(0.45916879, 3.31456274, 0.12117222, 0.34802393, 7.33753483, 0.40608843, 2.02007643, 1.21387110, 3.81242192
, 0.13278584, 0.06649522, 4.89408739, 4.68095091, 1.37743994, 1.04741447, 0.08481773, 1.14420193, 1.04763945
, 1.65399983, 3.18878471)
#Calcul interval de fluctuation de la moyenne
intrvFluc<-mean(echantillon1, echantillon2, echantillon3, echantillon4, echantillon5)
#Calcul interval de fluctuation de la moyenne
intrvFluc<-mean(echantillon1+echantillon2+ echantillon3+ echantillon4+ echantillon5)
intrvFluc
getwd()
#1 stockage de données :
echantillon1<-c(0.68938846, 1.72612559, 6.03555147, 0.40361563, 1.35423643, 0.43755565, 1.16310362, 0.08925679, 0.88439706
, 1.83145658, 0.86651504, 4.37638700, 0.96675782, 1.55535209, 1.24875387, 1.93813582, 0.70318682, 0.44569490
, 2.31551945, 0.26092488)
echantillon2<-c(1.21294856, 1.07366089, 0.52284983, 0.94403055, 0.53059638, 0.66431455, 0.11918900, 0.01014788, 0.99207551
, 1.49537888, 1.11491060, 4.23910681, 1.32327633, 2.15815562, 1.84504558, 4.38339477, 1.28975758, 0.13556966
, 4.05910357, 2.65021707)
echantillon3<-c(4.93362298, 1.04238280, 2.13726114, 1.45153761, 2.55945516, 2.19716638, 0.39689401, 0.48543652, 2.13686086
, 0.41087859, 1.09691746, 0.03072342, 10.50884621, 1.59623044, 2.32065654, 0.20772100, 0.18751629, 3.17820394
, 0.89839516, 3.44749498)
echantillon4<-c(0.01191219, 3.40085094, 1.63522822, 4.44908381, 3.50944444, 8.55186688, 0.54493362, 1.71543581, 0.70409088
, 0.38132654, 1.59910721, 1.85459464, 0.85092553, 0.46799522, 6.10405260, 1.24549747, 0.86186191, 2.33415904
, 1.45818600, 2.59349553)
echantillon5<-c(0.45916879, 3.31456274, 0.12117222, 0.34802393, 7.33753483, 0.40608843, 2.02007643, 1.21387110, 3.81242192
, 0.13278584, 0.06649522, 4.89408739, 4.68095091, 1.37743994, 1.04741447, 0.08481773, 1.14420193, 1.04763945
, 1.65399983, 3.18878471)
intrvFluc<-function(donnees){
n<-lenght(donnees)
moyenneD<-mean(donnees)
erreurtypD<-sd(moyenneD)/sqrt(n)
ectypeD<-sd(donnees)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
donnees
intrv1<-intrvFlucMoy(echantillon1)
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(donnees){
n<-lenght(donnees)
moyenneD<-mean(donnees)
erreurtypD<-sd(moyenneD)/sqrt(n)
ectypeD<-sd(donnees)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(donnees){
n<-lenght(donnees)
moyenneD<-mean(donnees)
ectypeD<-sd(donnees)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(data){
n<-lenght(data)
moyenneD<-mean(data)
ectypeD<-sd(data)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
# Stockage des données
echantillon1 <- c(0.68938846, 1.72612559, 6.03555147, 0.40361563, 1.35423643,
0.43755565, 1.16310362, 0.08925679, 0.88439706, 1.83145658,
0.86651504, 4.37638700, 0.96675782, 1.55535209, 1.24875387,
1.93813582, 0.70318682, 0.44569490, 2.31551945, 0.26092488)
echantillon2 <- c(1.21294856, 1.07366089, 0.52284983, 0.94403055, 0.53059638,
0.66431455, 0.11918900, 0.01014788, 0.99207551, 1.49537888,
1.11491060, 4.23910681, 1.32327633, 2.15815562, 1.84504558,
4.38339477, 1.28975758, 0.13556966, 4.05910357, 2.65021707)
echantillon3 <- c(4.93362298, 1.04238280, 2.13726114, 1.45153761, 2.55945516,
2.19716638, 0.39689401, 0.48543652, 2.13686086, 0.41087859,
1.09691746, 0.03072342, 10.50884621, 1.59623044, 2.32065654,
0.20772100, 0.18751629, 3.17820394, 0.89839516, 3.44749498)
echantillon4 <- c(0.01191219, 3.40085094, 1.63522822, 4.44908381, 3.50944444,
8.55186688, 0.54493362, 1.71543581, 0.70409088, 0.38132654,
1.59910721, 1.85459464, 0.85092553, 0.46799522, 6.10405260,
1.24549747, 0.86186191, 2.33415904, 1.45818600, 2.59349553)
echantillon5 <- c(0.45916879, 3.31456274, 0.12117222, 0.34802393, 7.33753483,
0.40608843, 2.02007643, 1.21387110, 3.81242192, 0.13278584,
0.06649522, 4.89408739, 4.68095091, 1.37743994, 1.04741447,
0.08481773, 1.14420193, 1.04763945, 1.65399983, 3.18878471)
# Fonction pour calculer l'intervalle de fluctuation de la moyenne
intervalle_fluctuation_moyenne <- function(data) {
n <- length(data)
mean_data <- mean(data)
sd_data <- sd(data)
erreur_type <- sd_data / sqrt(n)
lower_bound <- mean_data - 1.96 * erreur_type
upper_bound <- mean_data + 1.96 * erreur_type
return(c(lower_bound, upper_bound))
}
# Calcul des intervalles pour chaque échantillon
intervalle1 <- intervalle_fluctuation_moyenne(echantillon1)
intervalle2 <- intervalle_fluctuation_moyenne(echantillon2)
intervalle3 <- intervalle_fluctuation_moyenne(echantillon3)
intervalle4 <- intervalle_fluctuation_moyenne(echantillon4)
intervalle5 <- intervalle_fluctuation_moyenne(echantillon5)
# Affichage des intervalles
print("Intervalle de fluctuation pour échantillon 1:")
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(data){
n<-length(data)
moyenneD<-mean(data)
ectypeD<-sd(data)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(donnees){
n<-length(donnees)
moyenneD<-mean(donnees)
ectypeD<-sd(donnees)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
#1 stockage de données :
echantillon1<-c(0.68938846, 1.72612559, 6.03555147, 0.40361563, 1.35423643, 0.43755565, 1.16310362, 0.08925679, 0.88439706
, 1.83145658, 0.86651504, 4.37638700, 0.96675782, 1.55535209, 1.24875387, 1.93813582, 0.70318682, 0.44569490
, 2.31551945, 0.26092488)
echantillon2<-c(1.21294856, 1.07366089, 0.52284983, 0.94403055, 0.53059638, 0.66431455, 0.11918900, 0.01014788, 0.99207551
, 1.49537888, 1.11491060, 4.23910681, 1.32327633, 2.15815562, 1.84504558, 4.38339477, 1.28975758, 0.13556966
, 4.05910357, 2.65021707)
echantillon3<-c(4.93362298, 1.04238280, 2.13726114, 1.45153761, 2.55945516, 2.19716638, 0.39689401, 0.48543652, 2.13686086
, 0.41087859, 1.09691746, 0.03072342, 10.50884621, 1.59623044, 2.32065654, 0.20772100, 0.18751629, 3.17820394
, 0.89839516, 3.44749498)
echantillon4<-c(0.01191219, 3.40085094, 1.63522822, 4.44908381, 3.50944444, 8.55186688, 0.54493362, 1.71543581, 0.70409088
, 0.38132654, 1.59910721, 1.85459464, 0.85092553, 0.46799522, 6.10405260, 1.24549747, 0.86186191, 2.33415904
, 1.45818600, 2.59349553)
echantillon5<-c(0.45916879, 3.31456274, 0.12117222, 0.34802393, 7.33753483, 0.40608843, 2.02007643, 1.21387110, 3.81242192
, 0.13278584, 0.06649522, 4.89408739, 4.68095091, 1.37743994, 1.04741447, 0.08481773, 1.14420193, 1.04763945
, 1.65399983, 3.18878471)
#Calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(donnees){
n<-length(donnees)
moyenneD<-mean(donnees)
ectypeD<-sd(donnees)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
intrv1<-intrvFlucMoy(echantillon1)
intrv2<-intrvFlucMoy(echantillon2)
intrv3<-intrvFlucMoy(echantillon3)
intrv4<-intrvFlucMoy((echantillon4))
intrv5<-intrvFlucMoy(echantillon5)
intrv1; intrv2; intrv3; intrv4; intrv5
intrv1
mean(intrv1)
moyIntrv1<-mean(intrv1)
moyIntrv1
mean(intrv1)
mean(intrv2)
mean(intrv3)
mean(intrv4)
mean(intrv5)
#2 calcul interval de fluctuation de la moyenne
intrvFlucMoy<-function(echantillon){
n<-length(echantillon)
moyenneD<-mean(echantillon)
ectypeD<-sd(echantillon)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
intrv2<-intrvFlucMoy(echantillon2)
intrv3<-intrvFlucMoy(echantillon3)
intrv4<-intrvFlucMoy((echantillon4))
intrv5<-intrvFlucMoy(echantillon5)
intrv1; intrv2; intrv3; intrv4; intrv5
#2 calcul interval de fluctuation de la moyenne
echantillon<-(echantillon1+echantillon2+echantillon3+echantillon4+echantillon5)
intrvFlucMoy<-function(echantillon){
n<-length(echantillon)
moyenneD<-mean(echantillon)
ectypeD<-sd(echantillon)
erreurtypD<-ectypeD/sqrt(n)
borneInf<-moyenneD - 1.96 * erreurtypD
borneSup<-moyenneD + 1.96 * erreurtypD
return(c(borneInf, borneSup))
}
intrv1<-intrvFlucMoy(echantillon1)
intrv2<-intrvFlucMoy(echantillon2)
intrv3<-intrvFlucMoy(echantillon3)
intrv4<-intrvFlucMoy((echantillon4))
intrv5<-intrvFlucMoy(echantillon5)
intrv1; intrv2; intrv3; intrv4; intrv5
mean(intrv1)
mean(intrv2)
mean(intrv3)
mean(intrv4)
mean(intrv5)
# Charger les packages nécessaires
# Si vous n'avez pas dplyr installé, exécutez install.packages("dplyr")
library(dplyr)
### 1. Lecture et préparation du fichier times.csv
# Ce fichier contient une seule colonne (les timestamps) avec une ligne d'en-tête "Date : ..."
times_raw <- read.csv("times.csv", header = FALSE, stringsAsFactors = FALSE)
# Si la première ligne contient "Date :", on la supprime
if(grepl("^Date :", times_raw[1,1])){
times_raw <- times_raw[-1, , drop = FALSE]
}
# Charger les packages nécessaires
# Si vous n'avez pas dplyr installé, exécutez install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
### 1. Lecture et préparation du fichier times.csv
# Ce fichier contient une seule colonne (les timestamps) avec une ligne d'en-tête "Date : ..."
times_raw <- read.csv("times.csv", header = FALSE, stringsAsFactors = FALSE)
install.packages("data.table")  # à faire une seule fois
library(data.table)
weather <- fread("weather.csv")   # Pour un gros volume, fread est plus rapide que read.csv
weather <- fread("weather.csv")   # Pour un gros volume, fread est plus rapide que read.csv
library(data.table)
weather <- fread("weather.csv")   # Pour un gros volume, fread est plus rapide que read.csv
library(data.table)
weather <- fread("weather.csv")   # Pour un gros volume, fread est plus rapide que read.csv
setwd("~/SD_SEM4/TokyoScooterAnalysis")
library(data.table)
weather <- fread("weather.csv")   # Pour un gros volume, fread est plus rapide que read.csv
times   <- fread("times.csv", fill = TRUE)
location <- fread("location.csv", fill = TRUE)
location <- fread("location.csv", fill = TRUE)
head(weather)
head(times)
head(location)
# Renommer la colonne
setnames(times, old = "V1", new = "Timestamp")
# Supprimer le préfixe "Date : " si nécessaire
# (si la première ligne est "Date : 2017-12-01T00:00:00")
times[, Timestamp := gsub("^Date : ", "", Timestamp)]
# Renommer la colonne
setnames(times, old = "V1", new = "Timestamp")
# Renommer la colonne
setnames(times, old = "Dates", new = "Timestamp")
# Renommer la colonne
setnames(times, old = "Date", new = "Timestamp")
# Supprimer le préfixe "Date : " si nécessaire
# (si la première ligne est "Date : 2017-12-01T00:00:00")
times[, Timestamp := gsub("^Date : ", "", Timestamp)]
# Enlever le suffixe .000Z si présent
times[, Timestamp := gsub("\\.000Z$", "", Timestamp)]
# Extraire la date => col. "Date" au format YYYY-MM-DD
times[, Date := tstrsplit(Timestamp, "T")[[1]]]  # split sur "T" et prend le premier élément
times[, Date := as.IDate(Date, format = "%Y-%m-%d")]
location[, Date := as.IDate(Date, format = "%Y-%m-%d")]
# 1) Merge weather + location par la clé "Date"
# En data.table, on peut faire :
setkey(weather, Date)     # indexer la table weather par la colonne Date
setkey(location, Date)    # indexer la table location par la colonne Date
# On fait un merge "full" => on veut toutes les dates
mergedWL <- merge(weather, location, by = "Date", all = TRUE, allow.cartesian = TRUE)
# 2) Merge avec times
setkey(times, Date)
unified <- merge(mergedWL, times, by = "Date", all = TRUE, allow.cartesian = TRUE)
dim(unified)
head(unified)
# Enfin, on écrit dans un CSV
fwrite(unified, "unified.csv")
# Enfin, on écrit dans un CSV
fwrite(unified, "unified.csv")
